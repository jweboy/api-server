basePath: /v1
definitions:
  handler.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      message:
        type: string
    type: object
  user.CreateRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  user.CreateResponse:
    properties:
      username:
        type: string
    type: object
host: localhost:4000
info:
  contact: {}
  description: This is restful api server with golang.
  license:
    name: MIT
  termsOfService: https://github.com/jweboy/restfult-api-server
  title: Restful API
  version: '{{.Version}}'
paths:
  /qiniu/bucket:
    get:
      consumes:
      - application/json
      description: 获取所有的存储空间列表，无分页。
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"message":"ok", "data": []}'
          schema:
            $ref: '#/definitions/handler.Response'
            type: object
      summary: 获取存储空间列表
      tags:
      - qiniu
  /qiniu/file:
    get:
      consumes:
      - application/json
      description: 获取指定存储空间的文件列表，带分页。
      parameters:
      - description: 镜像空间名
        in: query
        name: bucket
        required: true
        type: string
      - description: 页码
        in: query
        name: page
        required: true
        type: integer
      - description: 页数
        in: query
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"message":"ok", "data": []}'
          schema:
            $ref: '#/definitions/handler.Response'
            type: object
      summary: 获取指定空间的文件列表
      tags:
      - qiniu
  /qiniu/file/{bucketName}:
    post:
      consumes:
      - application/json
      description: 支持任何格式的文件上传，文件大小有限定
      parameters:
      - description: 存储空间名称
        in: path
        name: bucketName
        required: true
        type: string
      produces:
      - application/json
      summary: 文件上传
      tags:
      - qiniu
  /user/{username}:
    post:
      consumes:
      - application/json
      description: 新增用户入库
      parameters:
      - description: 用户名1-32个字符,密码4-128个字符，都必填
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateRequest'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"message":"ok","data":{"username":"Jack"}}'
          schema:
            $ref: '#/definitions/user.CreateResponse'
            type: object
      summary: 创建用户
      tags:
      - user
swagger: "2.0"
